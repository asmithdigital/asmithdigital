// Grid system
@mixin mobile-reset($reset-breakpoint: medium down, $medium-down-reset: true, $reset-size: 16, $custom-gutter: false, $custom-gutter-size: small only) {

  @if $medium-down-reset {
    @include breakpoint($reset-breakpoint) {
      @include grid-column($reset-size);
      @include grid-column-offset(0);
    }
  }

  @if $custom-gutter {
    @include breakpoint($custom-gutter-size) {
      @include grid-column(16, $gutters: $custom-gutter);
      @include grid-column-offset(0);
    }
  }
}


@mixin input-item-spacing($top-bottom: 0) {
  padding: $top-bottom $global-padding;

  @include breakpoint(large) {
    padding-right: $global-padding * 2;
    padding-left: $global-padding * 2;
  }
}

// Reusable input group styles
@mixin input-group($button-color: secondary, $input-spacing: true) {

  // sass-lint:disable placeholder-in-extend
  &__input-group {
    @extend .input-group;

    &-label {
      @extend .input-group-label;
    }

    &-field {
      @extend .input-group-field;
      margin-bottom: 0 !important;
    }

    &-button {
      @extend .input-group-button;
      @include breakpoint(small only) {
        display: table !important;
        width: 100%;
      }

      * {
        @include breakpoint(small only) {
          display: block !important;
          width: 100%;
        }
      }
    }
  }
  // sass-lint:enable placeholder-in-extend

  &__button {
    @include button(false, get-color($button-color), lighten(get-color($button-color), 5));
    @include disabled-buttons(get-color($button-color));
    text-transform: uppercase;
  }

  @if $input-spacing {

    $height: ($input-font-size + $form-spacing * 2.5);

    &__input-group-field,
    &__button {
      height: $height !important;
    }

    &__input-group-field {
      @include input-item-spacing($global-padding / 2);
    }
  }
}

@mixin input-wrapper {
  margin: 0 0 $global-margin;
  padding: $global-padding * 2 $global-padding $global-padding;
  background: $light-gray;

  @include breakpoint(medium) {
    padding: $global-padding * 3 $global-padding * 2 $global-padding * 2;
  }
}

@mixin header-close-button(
  $background: null,
  $hide-on-desktop: false,
  $all-styles: true
) {
  padding-top: $global-margin * 3;

  &__close-button {

    @if $all-styles {
      @include close-button;
      @include close-button-size(medium);
      top: 0;
      right: 0;
      width: 100%;
      height: $global-margin * 3;
      padding: 0 1rem;
      border-bottom: 1px solid;
      background: $background;
      font-size: 1rem;
      font-weight: bold;
      text-transform: uppercase;

      span {
        position: absolute;
        top: 0.6rem;
        right: 1rem;
        font-size: 1.5rem;
      }
    }

    @if $hide-on-desktop {
      @include breakpoint(large) {
        display: none;
      }
    }
  }
}

// right menu offcanvas
@mixin menu-off-canvas($direction: right, $in-canvas: large, $direction-large: false, $base-background: null) {
  @include off-canvas-base($base-background);
  @include off-canvas-position($direction);
  max-width: 100%;

  @if $in-canvas {
    @include breakpoint($in-canvas) {
      @include in-canvas;
      width: 100% !important;
      visibility: visible !important;
      transform: none;
      box-shadow: none;
    }
  }
  @else {
    
    @if $direction-large {
      @include breakpoint(large) {
        @include off-canvas-position($direction-large);
      }
    }
  }
}

// Header menu drop down icon
@mixin header-menu-dropdown-icon($hide-mobile: true, $transform: uppercase) {
  > a {
    position: relative;
    text-transform: $transform;

    &::before {
      @extend .fa; // sass-lint:disable-line placeholder-in-extend
      position: absolute;
      #{$global-right}: 10px;
      content: $fa-var-angle-down;

      @if $hide-mobile {
        @include breakpoint(medium down) {
          content: none;
        }
      }
    }

    @if $hide-mobile {
      @include breakpoint(large) {
        padding-right: $global-padding * 2;
      }
    }
    @else {
      padding-right: $global-padding * 2;
    }
  }
}

// Typography shared css
@mixin pick-font-style($weight: 400, $custom-font: 'Open Sans', $backup-font: sans-serif) {
  font-family: $backup-font;
  font-weight: $weight;

  .fonts-loaded & {
    font-family: $custom-font, $backup-font;
  }
}

// Get the styles for a specific heading element to style a component element.
@mixin get-header-style($reset-style: false, $header-passed-in: false) {
  @if $reset-style {
    @extend %reset-heading-styles;
  }
  @if $header-passed-in {
    // Heading styles
    @each $size, $headers in $header-styles {
      @include breakpoint($size) {
        @each $header, $header-defs in $headers {
          @if $header == $header-passed-in {
            $font-size-temp: 1rem;
            @if map-has-key($header-defs, font-size) {
              $font-size-temp: rem-calc(map-get($header-defs, font-size));
              font-size: $font-size-temp;
            }
          }
        }
        line-height: $header-lineheight;
      }
    }
  }
  @else {
    @error '`$header-passed-in` is required';
  }
}

// Custom anchor colors for a component/element
@mixin anchor-colors($link: $anchor-color, $hover: $anchor-color-hover, $element: 'a') {
  #{$element} {
    color: $link;

    &:hover,
    &:focus {
      color: $hover;
    }
  }
}

// Heading styles with hover only underline, body color link, standard link hover and resize option
@mixin heading-style-anchors-underline(
  $color: $header-color,
  $color-hover: $anchor-color-hover,
  $resize: true,
  $reset-style: true,
  $size: 'h4') {

  @if $resize {
    @include get-header-style($reset-style, $size);
  }

  @extend %anchor-underline-hover-only;
  @include anchor-colors($color, $color-hover);
}

// Disabled buttons mixin to be shared with default buttons and also component buttons
@mixin disabled-buttons($color, $is-hollow: false) {

  &.is-disabled,
  &[disabled] {
    @if $is-hollow {
      &,
      &:hover, &:focus {
        border: $button-hollow-border-width solid $color;
        background-color: transparent;
        color: $color;
      }
    }
    @else {
      @include button-disabled($color, auto);
    }
  }
}

// Shared base styles for site menu services menu etc
@mixin shared-site-menu-base-styles(
  $border-style: dotted,
  $desktop-border-bottom-color: $white,
  $hide-close-button-on-desktop: false,
  $all-close-button-styles: true) {

  @include header-close-button($hide-on-desktop: $hide-close-button-on-desktop, $all-styles: $all-close-button-styles);

  @if $all-close-button-styles {

    li {
      width: 100%;
      border-top: 1px $border-style;
      border-bottom: 1px $border-style;

      @include breakpoint(large) {
        .ua-standard & {
          border-top: 0 !important;
          border-bottom-color: $desktop-border-bottom-color !important;
        }
      }
    }

    a {
      padding: $mobile-padding;
      line-height: $mobile-line-height;
      text-transform: $mobile-text-transform;
      white-space: normal;
    }

    li li a { // sass-lint:disable-line force-element-nesting
      line-height: $mobile-line-height;
      text-transform: capitalize;

      @include breakpoint(large) {
        .ua-standard & {
          line-height: 1;
        }
      }
    }
  }
}

// Social icon shared wrapper and icon styles
@mixin shared-social-icon-wrapper {
  @include clearfix;
  margin: 0 0 $global-margin * 0.75; // Need to account for 0.25rem space on icon
}

@mixin social-icon-component($class) {
  .#{$class} {
    display: inline-block;
    float: left;
    margin: 0 0.25rem 0.25rem 0;
    text-decoration: none !important;

    img {
      width: 30px;
      height: 30px;
    }

    &--large {
      img {
        width: 40px;
        height: 40px;
      }
    }
  }
}

// TODO: started with anchor borders
// Global anchor styles mixin
//$anchor-text-decoration: underline;
//$anchor-text-decoration-hover: underline;
//$anchor-color: get-color(primary);
//$anchor-color-hover: lighten($anchor-color, 8);

//@mixin links-base($color, $link, $hover, $active, $style, $style-hover) {
//  color: $color;
//  border-bottom: 1px $style $link;
//  &:hover {
//    color: $hover;
//    border-bottom: 1px $style-hover $hover;
//  }
//  &:active {
//    color: $active;
//    border-bottom: 1px $style-hover $active;
//  }
//}
//
//@mixin link-borders(
//  $include-parent: false,
//  $new-anchor-color: $anchor-color,
//  $link: $new-anchor-color,
//  $hover: $anchor-color-hover,
//  $active: $anchor-color-hover,
//  $clear-all-styles: false,
//  $border-size: '1px',
//  $anchor-border-style: dotted,
//  $anchor-border-style-hover: solid) {
//
//  a {
//    @if $clear-all-styles != true {
//      @include links-base($new-anchor-color, $link, $hover, $active, $anchor-border-style, $anchor-border-style-hover);
//    } @else {
//      @include links-base($clear-all-styles, inherit, inherit, inherit, none, none)
//    }
//  }
//
//  @if $include-parent {
//    & {
//      color: $new-anchor-color;
//    }
//  }
//}
//
//@mixin heading-styles($color: $black) {
//  @include link-borders(true, $color, transparent, $anchor-border-style-hover: dotted);
//}
